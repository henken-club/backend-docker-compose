version: "3.9"

x-postgres-healthcheck: &postgres-healthcheck
  test: pg_isready -U postgres
  interval: 10s
  timeout: 5s
  retries: 5

services:
  bff:
    build:
      context: ./bff
      dockerfile: Dockerfile
    networks:
      - services
    depends_on:
      main:
        condition: service_healthy
      content:
        condition: service_healthy
    environment:
      PORT: 4000
      JWKS_URI: $JWKS_URI
      AUDIENCE: $AUDIENCE
      ISSUER: $ISSUER
      SERVICE_URL_MAIN: http://main:8000/graphql
      SERVICE_URL_CONTENT: http://content:8000/graphql

  main:
    build:
      context: ./main-backend
      dockerfile: Dockerfile
    networks:
      - services
      - main
    healthcheck:
      test: "curl localhost:8000/health"
      interval: 5s
      timeout: 5s
      retries: 30
    depends_on:
      main-postgres:
        condition: service_healthy
    environment:
      PORT: 8000
      PRISMA_DATABASE_URL: postgresql://admin:password@main-postgres:5432/test

  main-postgres:
    image: postgres:13.4
    healthcheck: *postgres-healthcheck
    networks:
      - main
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test

  content:
    build:
      context: ./content-backend
      dockerfile: Dockerfile
    networks:
      - services
      - content
    healthcheck:
      test: "curl localhost:8000/health"
      interval: 5s
      timeout: 5s
      retries: 30
    depends_on:
      content-postgres:
        condition: service_healthy
    environment:
      PORT: 8000
      PRISMA_DATABASE_URL: postgresql://admin:password@content-postgres:5432/test

  content-postgres:
    image: postgres:13.4
    healthcheck: *postgres-healthcheck
    networks:
      - content
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test

networks:
  services:

  main:
  content:
